
AC_CHECK_HEADER([mokacelib.h], 
	[AC_CHECK_LIB(m, sqrt) # required to pass potrace check
	 AC_CHECK_LIB(potrace, potrace_trace, , HAVE_LIBPOTRACE=0)], HAVE_LIBPOTRACE=0)

if test "$HAVE_LIBPOTRACE" -eq 0; then
	AM_CPPFLAGS="$AM_CXXFLAGS -I../mokacelib -I../../mokacelib"
	EXTRA_LIBS="$EXTRA_LIBS ../mokacelib/libpotrace.a "
	AC_MSG_NOTICE([Using bundled potrace library])
fi



AC_CHECK_HEADER([ghostscript/iapi.h], 
	AC_CHECK_LIB(gs, gsapi_new_instance, , HAVE_LIBGS=0), HAVE_LIBGS=0)

if test "$HAVE_LIBGS" -eq 0; then
	AC_CHECK_LIB(dl, dlopen, ,
		[AC_DEFINE(DISABLE_GS, 1, [Set to 1 if PostScript support should be disabled])
		 AC_MSG_WARN(PostScript support disabled)])
else
	# query Ghostscript version
	AC_MSG_CHECKING([Ghostscript version])
	AC_TRY_RUN([#include <stdio.h>
		#include <ghostscript/iapi.h>
		int main () {
			gsapi_revision_t r;
			if (gsapi_revision(&r, sizeof(gsapi_revision_t)) == 0) {
				FILE *f; 
				f = fopen("gsversion", "w");
				if (!f) exit(1);
				fprintf(f, "%d\n", r.revision);
				fclose(f);
				exit(0);
			}
		}],
		[gsversion=`cat gsversion|cut -c1-3`], [gsversion=], [gsversion=unknown])
	AC_MSG_RESULT("$gsversion")
	rm -f gsversion >/dev/null
	if test "$gsversion" -lt 831; then
		# current Ghostscript API was introduced in version 0.21
		# older versions are not supported
		LIBS=`echo $LIBS | sed "s/-lgs //" $LIBS`
		AC_DEFINE(DISABLE_GS, 1, [Set to 1 if PostScript support should be disabled])
		AC_MSG_WARN([Ghostscript version < 8.31; PostScript support disabled])
	fi
fi
 
